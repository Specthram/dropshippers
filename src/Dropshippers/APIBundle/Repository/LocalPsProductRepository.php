<?php

namespace Dropshippers\APIBundle\Repository;
use Dropshippers\APIBundle\Entity\Shop;

/**
 * LocalPsProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LocalPsProductRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllWithFilters($filters = array())
    {
        $queryBuilder = $this->createQueryBuilder('a');

        $queryBuilder->where('a.shop != :shop')
            ->setParameter('shop', $filters['shop']);

        if (!empty($filters['name'])){
            $queryBuilder->andWhere("a.name LIKE :name")
                ->setParameter('name', '%'.$filters['name'].'%');
        }

        if (!empty($filters['category'])){

            $queryBuilder->join("a.categories", "cat");
            $queryBuilder->andWhere('cat.id LIKE :category')
                ->setParameter('category', $filters['category']);
        }

        if (!empty($filters['shopName'])){

            $queryBuilder->join("a.shop", "s");
            $queryBuilder->andWhere('s.name LIKE :shopName')
                ->setParameter('shopName', "%".$filters['shopName']."%");
        }

        if (!empty($filters['maxPrice']) && !empty($filters['minPrice'])){
            $queryBuilder->andWhere('a.price BETWEEN :minPrice AND :maxPrice')
                ->setParameter('minPrice', intval($filters['minPrice']))
                ->setParameter('maxPrice', intval($filters['maxPrice']));
        }elseif (!empty($filters['maxPrice']) ){
            $queryBuilder->andWhere('a.price < :maxPrice')
                ->setParameter('maxPrice', intval($filters['maxPrice']));
        }elseif (!empty($filters['minPrice'])){
            $queryBuilder->andWhere('a.price > :minPrice')
                ->setParameter('minPrice', intval($filters['minPrice']));
        }

        $query = $queryBuilder->getQuery();

        $results = $query->getResult();

        return $results;
    }
}
